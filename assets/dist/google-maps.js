!function(t){"function"==typeof define&&define.amd?define("googleMaps",t):t()}(function(){"use strict";Voxel.Maps.Autocomplete=function(t,e,o={}){this.init(t,e,o)},Voxel.Maps.Autocomplete.prototype.selectFirstResult=function(t){},Voxel.Maps.Bounds=function(t,e){this.southwest=t,this.northeast=e,this.init(t,e)},Voxel.Maps.Bounds.prototype.extend=function(t){},Voxel.Maps.Bounds.prototype.empty=function(){},Voxel.Maps.Bounds.prototype.getSourceObject=function(){},Voxel.Maps.Bounds.prototype.getSouthWest=function(){return this.southwest},Voxel.Maps.Bounds.prototype.getNorthEast=function(){return this.northeast},Voxel.Maps.Geocoder=function(){this.init()},Voxel.Maps.getGeocoder=function(){return Voxel.Maps._geocoder||(Voxel.Maps._geocoder=new Voxel.Maps.Geocoder),Voxel.Maps._geocoder},Voxel.Maps.Geocoder.prototype.geocode=function(t,e,o){},Voxel.Maps.Geocoder.prototype.formatFeature=function(t){},Voxel.Maps.Geocoder.prototype.getUserLocation=function({fetchAddress:e=!0,receivedPosition:o=t=>{},receivedAddress:s=t=>{},positionFail:t=()=>{},addressFail:n=()=>{}}={}){if(!navigator.geolocation)return t();navigator.geolocation.getCurrentPosition(t=>{t=new Voxel.Maps.LatLng(t.coords.latitude,t.coords.longitude);o(t),!1!==e&&Voxel.Maps.getGeocoder().geocode(t.toGeocoderFormat(),t=>t?s(t):(Voxel.alert(Voxel_Config.l10n.positionFail,"error"),n()))},()=>t())},Voxel.Maps.LatLng=function(t,e){this.init(t,e)},Voxel.Maps.LatLng.prototype.getLatitude=function(){},Voxel.Maps.LatLng.prototype.getLongitude=function(){},Voxel.Maps.LatLng.prototype.getSourceObject=function(){},Voxel.Maps.LatLng.prototype.toGeocoderFormat=function(){},Voxel.Maps.Map=function({el:t,zoom:e=10,center:o=new Voxel.Maps.LatLng(Voxel_Config.maps.default_lat,Voxel_Config.maps.default_lng),minZoom:s=4,maxZoom:n=20,draggable:i=!0}){this.init({el:t,zoom:e,center:o,minZoom:s,maxZoom:n,draggable:i})},Voxel.Maps.Map.prototype.setZoom=function(t){},Voxel.Maps.Map.prototype.getZoom=function(){},Voxel.Maps.Map.prototype.getMinZoom=function(){},Voxel.Maps.Map.prototype.getMaxZoom=function(){},Voxel.Maps.Map.prototype.setCenter=function(t){},Voxel.Maps.Map.prototype.getCenter=function(){},Voxel.Maps.Map.prototype.fitBounds=function(t){},Voxel.Maps.Map.prototype.panTo=function(t){},Voxel.Maps.Map.prototype.getClickPosition=function(t){},Voxel.Maps.Map.prototype.addListener=function(t,e){},Voxel.Maps.Map.prototype.addListenerOnce=function(t,e){},Voxel.Maps.Map.prototype.removeListener=function(t){},Voxel.Maps.Map.prototype.trigger=function(t){},Voxel.Maps.Map.prototype.mapEvent=function(t){return void 0!==this.eventMap[t]?this.eventMap[t]:t},Voxel.Maps.Map.prototype.removeMarkers=function(){for(var t=0;t<this.markers.length;t++)this.markers[t].remove();this.markers=[]},Voxel.Maps.Map.prototype.getSourceObject=function(){},Voxel.Maps.Marker=function({map:t=null,position:e=null,onClick:o=null,template:s=null,data:n=null}){this.template=s,this.init({map:t,position:e,onClick:o,data:n})},Voxel.Maps.Marker.prototype.getPosition=function(){},Voxel.Maps.Marker.prototype.setPosition=function(t){},Voxel.Maps.Marker.prototype.getMap=function(){},Voxel.Maps.Marker.prototype.setMap=function(t){},Voxel.Maps.Marker.prototype.remove=function(){},Voxel.Maps.Marker.prototype.addClass=function(){},Voxel.Maps.Marker.prototype.removeClass=function(){},Voxel.Maps.Marker.prototype.getTemplate=function(){var t=this.template||'<div class="map-marker marker-type-icon"><i class="las la-map-marker"></i></div>';return jQuery(`<div class="marker-wrapper">${t}</div>`)},Voxel.Maps.Popup=function({map:t=null,position:e=null,content:o=null}){this.init({map:t,position:e,content:o})},Voxel.Maps.Popup.prototype.init=function(t){},Voxel.Maps.Popup.prototype.setContent=function(t){},Voxel.Maps.Popup.prototype.setPosition=function(t){},Voxel.Maps.Popup.prototype.setMap=function(t){},Voxel.Maps.Popup.prototype.show=function(){},Voxel.Maps.Popup.prototype.hide=function(){},Voxel.Maps.Circle=function({map:t=null,center:e=null,radius:o=null,visible:s=null,className:n="map-circle"}){this.init({map:t,center:e,radius:o,visible:s,className:n})},Voxel.Maps.Clusterer=function({map:t=null}){this.init({map:t})},Voxel.Maps.Autocomplete.prototype.init=function(e,o,t){e instanceof Element&&(this.el=e,this.input=jQuery(this.el),this.onChange=o,this.options={fields:["geometry.location","geometry.viewport","formatted_address"]},t.feature_types?.length&&(this.options.types=Vue.toRaw(t.feature_types)),t.countries?.length&&(this.options.componentRestrictions={country:Vue.toRaw(t.countries)}),this.autocomplete=new google.maps.places.Autocomplete(this.el,this.options),this.service=new google.maps.places.AutocompleteService,this.placesService=new google.maps.places.PlacesService(this.el),this.input.on("input",t=>{o()}),this.autocomplete.addListener("place_changed",()=>{var t=this.autocomplete.getPlace();e.value&&t.formatted_address!==e.value&&(t.formatted_address=e.value),t&&t.formatted_address&&o(Voxel.Maps.getGeocoder().formatFeature(t))}))},Voxel.Maps.Autocomplete.prototype.selectFirstResult=function(o){var t;document.querySelector(".pac-item.pac-item-selected")||(t={input:this.el.value},this.options.types&&(t.types=this.options.types),this.options.componentRestrictions&&(t.componentRestrictions=this.options.componentRestrictions),this.service.getPlacePredictions(t,(t,e)=>{"OK"===e&&0<t.length&&(e=t[0],this.el.value=e.description,t={placeId:e.place_id,fields:this.options.fields},this.placesService.getDetails(t,(t,e)=>{"OK"===e&&(this.onChange(Voxel.Maps.getGeocoder().formatFeature(t)),o())}))}))},Voxel.Maps.Bounds.prototype.init=function(t,e){this.southwest=t,this.northeast=e,this.bounds=new google.maps.LatLngBounds(t?.getSourceObject(),e?.getSourceObject())},Voxel.Maps.Bounds.prototype.getSouthWest=function(){return this.southwest},Voxel.Maps.Bounds.prototype.getNorthEast=function(){return this.northeast},Voxel.Maps.Bounds.prototype.extend=function(t){this.bounds.extend(t.getSourceObject())},Voxel.Maps.Bounds.prototype.empty=function(){return this.bounds.isEmpty()},Voxel.Maps.Bounds.prototype.getSourceObject=function(){return this.bounds},Voxel.Maps.Geocoder.prototype.init=function(){this.geocoder=new google.maps.Geocoder},Voxel.Maps.Geocoder.prototype.geocode=function(t,o,s){var n=this,i=!1,e={};if(t instanceof google.maps.LatLng)e.location=t;else{if("string"!=typeof t||!t.length)return s(i);e.address=t}"function"==typeof o&&(s=o,o={});o=jQuery.extend({limit:1},o);this.geocoder.geocode(e,(t,e)=>("OK"===e&&t&&t.length?i=1===o.limit?n.formatFeature(t[0]):t.map(this.formatFeature):console.log("Geocoding failed. ["+e+"]"),s(i)))},Voxel.Maps.Geocoder.prototype.formatFeature=function(t){var e=t?.geometry?.location,o=t?.geometry?.viewport;return e&&o?{address:t.formatted_address,latlng:new Voxel.Maps.LatLng(e.lat(),e.lng()),viewport:new Voxel.Maps.Bounds(new Voxel.Maps.LatLng(o.getSouthWest().lat(),o.getSouthWest().lng()),new Voxel.Maps.LatLng(o.getNorthEast().lat(),o.getNorthEast().lng()))}:null},Voxel.Maps.LatLng.prototype.init=function(t,e){this.latlng=new google.maps.LatLng(t,e)},Voxel.Maps.LatLng.prototype.getLatitude=function(){return this.latlng.lat()},Voxel.Maps.LatLng.prototype.getLongitude=function(){return this.latlng.lng()},Voxel.Maps.LatLng.prototype.getSourceObject=function(){return this.latlng},Voxel.Maps.LatLng.prototype.toGeocoderFormat=function(){return this.latlng},Voxel.Maps.Map.prototype.init=function({el:t,zoom:e,center:o,minZoom:s,maxZoom:n,draggable:i}){this.eventMap={},this.map=new google.maps.Map(t,{zoom:e,minZoom:2<=s?s:2,maxZoom:n,draggable:i,navigationControl:!0,mapTypeId:Voxel_Config.google_maps?.mapTypeId||"roadmap",mapTypeControl:!!Voxel_Config.google_maps?.mapTypeControl,streetViewControl:!!Voxel_Config.google_maps?.streetViewControl,zoomControl:!0,controlSize:32,gestureHandling:"greedy",styles:Voxel_Config.google_maps?.skin||[{featureType:"all",elementType:"labels.text",stylers:[{color:"#878787"}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"off"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f9f5ed"}]},{featureType:"road.highway",elementType:"all",stylers:[{color:"#f5f5f5"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#c9c9c9"}]},{featureType:"water",elementType:"all",stylers:[{color:"#aee0f4"}]}]}),this.setCenter(o),t.classList.add("ts-map-loaded"),t.__vx_map__=this},Voxel.Maps.Map.prototype.setZoom=function(t){this.map.setZoom(t)},Voxel.Maps.Map.prototype.getZoom=function(){return this.map.getZoom()},Voxel.Maps.Map.prototype.getMinZoom=function(){return this.map.minZoom},Voxel.Maps.Map.prototype.getMaxZoom=function(){return this.map.maxZoom},Voxel.Maps.Map.prototype.setCenter=function(t){this.map.setCenter(t.getSourceObject())},Voxel.Maps.Map.prototype.getCenter=function(){return new Voxel.Maps.LatLng(this.map.center.lat(),this.map.center.lng())},Voxel.Maps.Map.prototype.getBounds=function(){var t=this.map.getBounds();return new Voxel.Maps.Bounds(new Voxel.Maps.LatLng(t.getSouthWest()),new Voxel.Maps.LatLng(t.getNorthEast()))},Voxel.Maps.Map.prototype.fitBounds=function(t){this.map.fitBounds(t.getSourceObject(),0)},Voxel.Maps.Map.prototype.panTo=function(t){this.map.panTo(t.getSourceObject())},Voxel.Maps.Map.prototype.getClickPosition=function(t){return new Voxel.Maps.LatLng(t.latLng.lat(),t.latLng.lng())},Voxel.Maps.Map.prototype.addListener=function(t,e){return google.maps.event.addListener(this.map,this.mapEvent(t),t=>e(t))},Voxel.Maps.Map.prototype.addListenerOnce=function(t,e){return google.maps.event.addListenerOnce(this.map,this.mapEvent(t),t=>e(t))},Voxel.Maps.Map.prototype.removeListener=function(t){google.maps.event.removeListener(t)},Voxel.Maps.Map.prototype.trigger=function(t){google.maps.event.trigger(this.map,this.mapEvent(t))},Voxel.Maps.Map.prototype.getSourceObject=function(){return this.map},Voxel.Maps.Marker.prototype.init=function({map:t,position:e,onClick:o,data:s}){this.data=s,this.marker=new Voxel.Maps.GoogleMapsOverlay(this),this.onClick=o,t&&this.setMap(t),e&&this.setPosition(e)},Voxel.Maps.Marker.prototype.getPosition=function(){return this.position},Voxel.Maps.Marker.prototype.setPosition=function(t){this.position=t,this.marker.setPosition(t?.getSourceObject())},Voxel.Maps.Marker.prototype.getMap=function(){return this.map},Voxel.Maps.Marker.prototype.setMap=function(t){this.map=t,this.marker.setMap(t.getSourceObject())},Voxel.Maps.Marker.prototype.remove=function(){return this.marker.setMap(null),this.marker.remove(),this},Voxel.Maps.Marker.prototype.getSourceObject=function(){return this.marker},Voxel.Maps.Marker.prototype.addClass=function(t){return this.marker.node?.classList.add(t)},Voxel.Maps.Marker.prototype.removeClass=function(t){return this.marker.node?.classList.remove(t)},Voxel.Maps.SetupMarkerOverlay=()=>{Voxel.Maps.GoogleMapsOverlay=function(t){this.marker=t,this.template=t.getTemplate(),this.latlng=t.getPosition()?.getSourceObject()},Voxel.Maps.GoogleMapsOverlay.prototype=new google.maps.OverlayView,Voxel.Maps.GoogleMapsOverlay.prototype.draw=function(){this.node||(this.node=this.template.get(0),this.node._vx_added_listeners||(this.node._vx_added_listeners=!0,this.node.addEventListener("touchstart",t=>t.stopPropagation()),this.node.addEventListener("click",t=>{t.stopPropagation(),this.marker.onClick&&this.marker.onClick(t,this.marker)})),this.getPanes().overlayImage.appendChild(this.node)),this.setPosition(this.latlng)},Voxel.Maps.GoogleMapsOverlay.prototype.remove=function(){this.node&&this.node.remove(),this.node=null},Voxel.Maps.GoogleMapsOverlay.prototype.getPosition=function(){return this.latlng},Voxel.Maps.GoogleMapsOverlay.prototype.getDraggable=function(){return!1},Voxel.Maps.GoogleMapsOverlay.prototype.getVisible=function(){return!0},Voxel.Maps.GoogleMapsOverlay.prototype.setPosition=function(t){this.latlng=t,this.node&&(this.latlng?(t=this.getProjection().fromLatLngToDivPixel(this.latlng),this.node.style.left=t.x+"px",this.node.style.top=t.y+"px",this.node.style.visibility="visible"):this.node.style.visibility="hidden")}},Voxel.Maps.Popup.prototype.init=function({map:t,position:e,content:o}){this.map=t;t=document.createElement("div");t.classList.add("ts-gmaps-popup-initial"),this.popup=new google.maps.InfoWindow({headerContent:t}),e&&this.setPosition(e),o&&this.setContent(o),google.maps.event.addListener(this.popup,"domready",()=>{this.popup.content.closest(".gm-style-iw-a").classList.add("ts-marker"),this.popup.content?.classList?.contains("empty-popup")&&this.popup.content.closest(".gm-style-iw-a").classList.add("ts-marker-empty")})},Voxel.Maps.Popup.prototype.setContent=function(t){this.popup.setContent(t)},Voxel.Maps.Popup.prototype.setPosition=function(t){this.popup.setPosition(t.getSourceObject())},Voxel.Maps.Popup.prototype.setMap=function(t){this.map=t},Voxel.Maps.Popup.prototype.show=function(){this.popup.open(this.map.getSourceObject())},Voxel.Maps.Popup.prototype.hide=function(){this.popup.close()},Voxel.Maps.Circle.prototype.init=function({map:t=null,center:e=null,radius:o=null,className:s=null}){this.overlay=new Voxel.Maps.CircleOverlay(e.getSourceObject(),o,t.getSourceObject(),s),this.circle=this.overlay.circle},Voxel.Maps.Circle.prototype.hide=function(){this.overlay.div_&&(this.overlay.div_.classList.add("hidden"),this.overlay.center_.classList.add("hidden"))},Voxel.Maps.Circle.prototype.show=function(){this.overlay.div_&&(this.overlay.div_.classList.remove("hidden"),this.overlay.center_.classList.remove("hidden"))},Voxel.Maps.Circle.prototype.setCenter=function(t){this.circle.setCenter(t.getSourceObject())},Voxel.Maps.Circle.prototype.setRadius=function(t){this.circle.setRadius(t)},Voxel.Maps.Circle.prototype.getBounds=function(){var t=this.circle.getBounds();return new Voxel.Maps.Bounds(new Voxel.Maps.LatLng(t.getSouthWest()),new Voxel.Maps.LatLng(t.getNorthEast()))},Voxel.Maps.SetupCircleOverlay=()=>{Voxel.Maps.CircleOverlay=function(t,e,o,s){this.circle=new google.maps.Circle({strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:2,fillColor:"#FF0000",fillOpacity:.35,clickable:!1,visible:!1,map:o,center:t,radius:e}),this.map_=o,this.div_=null,this.center_=null,this.className_=s,this.setMap(o)},Voxel.Maps.CircleOverlay.prototype=new google.maps.OverlayView,Voxel.Maps.CircleOverlay.prototype.onAdd=function(){var t=document.createElement("div"),e=(t.style.position="absolute",t.className=this.className_+" hidden",document.createElement("div")),e=(e.className="map-circle-inner",e.style.width="100%",e.style.height="100%",e.style.position="absolute",t.appendChild(e),document.createElement("div")),o=(e.className=this.className_+"-center hidden",e.style.position="absolute",this.div_=t,this.center_=e,this.getPanes());o.overlayLayer.appendChild(t),o.overlayLayer.appendChild(e)},Voxel.Maps.CircleOverlay.prototype.draw=function(){var t=this.getProjection(),e=this.circle.getBounds(),o=t.fromLatLngToDivPixel(e.getSouthWest()),s=t.fromLatLngToDivPixel(e.getNorthEast()),n=this.div_,n=(n.style.left=o.x+"px",n.style.top=s.y+"px",n.style.width=s.x-o.x+"px",n.style.height=o.y-s.y+"px",this.center_),o=t.fromLatLngToDivPixel(e.getCenter());n.style.left=o.x+"px",n.style.top=o.y+"px"},Voxel.Maps.CircleOverlay.prototype.onRemove=function(){this.div_.parentNode.removeChild(this.div_),this.div_=null,this.center_.parentNode.removeChild(this.center_),this.center_=null}};(function(t){t.exports=function(){const p=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],l=1,c=8;class a{static from(t){if(!(t instanceof ArrayBuffer))throw new Error("Data must be an instance of ArrayBuffer.");const[e,o]=new Uint8Array(t,0,2);if(e!==219)throw new Error("Data does not appear to be in a KDBush format.");const s=o>>4;if(s!==l)throw new Error(`Got v${s} data when expected v${l}.`);const n=p[o&15];if(!n)throw new Error("Unrecognized array type.");const[i]=new Uint16Array(t,2,1);const[r]=new Uint32Array(t,4,1);return new a(r,i,n,t)}constructor(t,e=64,o=Float64Array,s){if(isNaN(t)||t<=0)throw new Error(`Unpexpected numItems value: ${t}.`);this.numItems=+t;this.nodeSize=Math.min(Math.max(+e,2),65535);this.ArrayType=o;this.IndexArrayType=t<65536?Uint16Array:Uint32Array;const n=p.indexOf(this.ArrayType);const i=t*2*this.ArrayType.BYTES_PER_ELEMENT;const r=t*this.IndexArrayType.BYTES_PER_ELEMENT;const a=(8-r%8)%8;if(n<0)throw new Error(`Unexpected typed array class: ${o}.`);if(s&&s instanceof ArrayBuffer){this.data=s;this.ids=new this.IndexArrayType(this.data,c,t);this.coords=new this.ArrayType(this.data,c+r+a,t*2);this._pos=t*2;this._finished=true}else{this.data=new ArrayBuffer(c+i+r+a);this.ids=new this.IndexArrayType(this.data,c,t);this.coords=new this.ArrayType(this.data,c+r+a,t*2);this._pos=0;this._finished=false;new Uint8Array(this.data,0,2).set([219,(l<<4)+n]);new Uint16Array(this.data,2,1)[0]=e;new Uint32Array(this.data,4,1)[0]=t}}add(t,e){const o=this._pos>>1;this.ids[o]=o;this.coords[this._pos++]=t;this.coords[this._pos++]=e;return o}finish(){const t=this._pos>>1;if(t!==this.numItems)throw new Error(`Added ${t} items when expected ${this.numItems}.`);u(this.ids,this.coords,this.nodeSize,0,this.numItems-1,0);this._finished=true;return this}range(e,o,s,n){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");const{ids:i,coords:r,nodeSize:t}=this;const a=[0,i.length-1,0];const p=[];while(a.length){const l=a.pop()||0;const c=a.pop()||0;const u=a.pop()||0;if(c-u<=t){for(let t=u;t<=c;t++){const g=r[2*t];const f=r[2*t+1];if(g>=e&&g<=s&&f>=o&&f<=n)p.push(i[t])}continue}const h=u+c>>1;const d=r[2*h];const m=r[2*h+1];if(d>=e&&d<=s&&m>=o&&m<=n)p.push(i[h]);if(l===0?e<=d:o<=m){a.push(u);a.push(h-1);a.push(1-l)}if(l===0?s>=d:n>=m){a.push(h+1);a.push(c);a.push(1-l)}}return p}within(e,o,t){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");const{ids:s,coords:n,nodeSize:i}=this;const r=[0,s.length-1,0];const a=[];const p=t*t;while(r.length){const l=r.pop()||0;const c=r.pop()||0;const u=r.pop()||0;if(c-u<=i){for(let t=u;t<=c;t++)if(g(n[2*t],n[2*t+1],e,o)<=p)a.push(s[t]);continue}const h=u+c>>1;const d=n[2*h];const m=n[2*h+1];if(g(d,m,e,o)<=p)a.push(s[h]);if(l===0?e-t<=d:o-t<=m){r.push(u);r.push(h-1);r.push(1-l)}if(l===0?e+t>=d:o+t>=m){r.push(h+1);r.push(c);r.push(1-l)}}return a}}function u(t,e,o,s,n,i){if(n-s<=o)return;const r=s+n>>1;f(t,e,r,s,n,i);u(t,e,o,s,r-1,1-i);u(t,e,o,r+1,n,1-i)}function f(o,s,n,i,r,a){while(r>i){if(r-i>600){const l=r-i+1;const c=n-i+1;const u=Math.log(l);const h=.5*Math.exp(2*u/3);const d=.5*Math.sqrt(u*h*(l-h)/l)*(c-l/2<0?-1:1);const m=Math.max(i,Math.floor(n-c*h/l+d));const g=Math.min(r,Math.floor(n+(l-c)*h/l+d));f(o,s,n,m,g,a)}const p=s[2*n+a];let t=i;let e=r;y(o,s,i,n);if(s[2*r+a]>p)y(o,s,i,r);while(t<e){y(o,s,t,e);t++;e--;while(s[2*t+a]<p)t++;while(s[2*e+a]>p)e--}if(s[2*i+a]===p)y(o,s,i,e);else{e++;y(o,s,e,r)}if(e<=n)i=e+1;if(n<=e)r=e-1}}function y(t,e,o,s){n(t,o,s);n(e,2*o,2*s);n(e,2*o+1,2*s+1)}function n(t,e,o){const s=t[e];t[e]=t[o];t[o]=s}function g(t,e,o,s){const n=t-o;const i=e-s;return n*n+i*i}const e={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:false,generateId:false,reduce:null,map:t=>t},d=Math.fround||(e=>t=>{e[0]=+t;return e[0]})(new Float32Array(1)),L=2,M=3,C=4,k=5,h=6;class t{constructor(t){this.options=Object.assign(Object.create(e),t);this.trees=new Array(this.options.maxZoom+1);this.stride=this.options.reduce?7:6;this.clusterProps=[]}load(e){const{log:o,minZoom:s,maxZoom:n}=this.options;if(o)console.time("total time");const t=`prepare ${e.length} points`;if(o)console.time(t);this.points=e;const i=[];for(let t=0;t<e.length;t++){const a=e[t];if(!a.geometry)continue;const[p,l]=a.geometry.coordinates;const c=d(V(p));const u=d(v(l));i.push(c,u,Infinity,t,-1,1);if(this.options.reduce)i.push(0)}let r=this.trees[n+1]=this._createTree(i);if(o)console.timeEnd(t);for(let t=n;t>=s;t--){const h=+Date.now();r=this.trees[t]=this._createTree(this._cluster(r,t));if(o)console.log("z%d: %d clusters in %dms",t,r.numItems,+Date.now()-h)}if(o)console.timeEnd("total time");return this}getClusters(t,e){let o=((t[0]+180)%360+360)%360-180;const s=Math.max(-90,Math.min(90,t[1]));let n=t[2]===180?180:((t[2]+180)%360+360)%360-180;const i=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360){o=-180;n=180}else if(o>n){const c=this.getClusters([o,s,180,i],e);const u=this.getClusters([-180,s,n,i],e);return c.concat(u)}const r=this.trees[this._limitZoom(e)];const a=r.range(V(o),v(i),V(n),v(s));const p=r.data;const l=[];for(const h of a){const d=this.stride*h;l.push(p[d+k]>1?m(p,d,this.clusterProps):this.points[p[d+M]])}return l}getChildren(t){const e=this._getOriginId(t);const o=this._getOriginZoom(t);const s="No cluster with the specified id.";const n=this.trees[o];if(!n)throw new Error(s);const i=n.data;if(e*this.stride>=i.length)throw new Error(s);const r=this.options.radius/(this.options.extent*Math.pow(2,o-1));const a=i[e*this.stride];const p=i[e*this.stride+1];const l=n.within(a,p,r);const c=[];for(const u of l){const h=u*this.stride;if(i[h+C]===t)c.push(i[h+k]>1?m(i,h,this.clusterProps):this.points[i[h+M]])}if(c.length===0)throw new Error(s);return c}getLeaves(t,e,o){e=e||10;o=o||0;const s=[];this._appendLeaves(s,t,e,o,0);return s}getTile(t,e,o){const s=this.trees[this._limitZoom(t)];const n=Math.pow(2,t);const{extent:i,radius:r}=this.options;const a=r/i;const p=(o-a)/n;const l=(o+1+a)/n;const c={features:[]};this._addTileFeatures(s.range((e-a)/n,p,(e+1+a)/n,l),s.data,e,o,n,c);if(e===0)this._addTileFeatures(s.range(1-a/n,p,1,l),s.data,n,o,n,c);if(e===n-1)this._addTileFeatures(s.range(0,p,a/n,l),s.data,-1,o,n,c);return c.features.length?c:null}getClusterExpansionZoom(t){let e=this._getOriginZoom(t)-1;while(e<=this.options.maxZoom){const o=this.getChildren(t);e++;if(o.length!==1)break;t=o[0].properties.cluster_id}return e}_appendLeaves(t,e,o,s,n){const i=this.getChildren(e);for(const r of i){const a=r.properties;if(a&&a.cluster)if(n+a.point_count<=s)n+=a.point_count;else n=this._appendLeaves(t,a.cluster_id,o,s,n);else if(n<s)n++;else t.push(r);if(t.length===o)break}return n}_createTree(e){const o=new a(e.length/this.stride|0,this.options.nodeSize,Float32Array);for(let t=0;t<e.length;t+=this.stride)o.add(e[t],e[t+1]);o.finish();o.data=e;return o}_addTileFeatures(t,n,i,r,a,p){for(const l of t){const c=l*this.stride;const u=n[c+k]>1;let t,e,o;if(u){t=x(n,c,this.clusterProps);e=n[c];o=n[c+1]}else{const d=this.points[n[c+M]];t=d.properties;const[m,g]=d.geometry.coordinates;e=V(m);o=v(g)}const h={type:1,geometry:[[Math.round(this.options.extent*(e*a-i)),Math.round(this.options.extent*(o*a-r))]],tags:t};let s;if(u||this.options.generateId)s=n[c+M];else s=this.points[n[c+M]].id;if(s!==undefined)h.id=s;p.features.push(h)}}_limitZoom(t){return Math.max(this.options.minZoom,Math.min(Math.floor(+t),this.options.maxZoom+1))}_cluster(t,r){const{radius:e,extent:o,reduce:a,minPoints:s}=this.options;const p=e/(o*Math.pow(2,r));const l=t.data;const c=[];const u=this.stride;for(let i=0;i<l.length;i+=u){if(l[i+L]<=r)continue;l[i+L]=r;const h=l[i];const d=l[i+1];const m=t.within(l[i],l[i+1],p);const g=l[i+k];let n=g;for(const f of m){const y=f*u;if(l[y+L]>r)n+=l[y+k]}if(n>g&&n>=s){let t=h*g;let e=d*g;let o;let s=-1;const M=((i/u|0)<<5)+(r+1)+this.points.length;for(const x of m){const V=x*u;if(l[V+L]<=r)continue;l[V+L]=r;const v=l[V+k];t+=l[V]*v;e+=l[V+1]*v;l[V+C]=M;if(a){if(!o){o=this._map(l,i,true);s=this.clusterProps.length;this.clusterProps.push(o)}a(o,this._map(l,V))}}l[i+C]=M;c.push(t/n,e/n,Infinity,M,-1,n);if(a)c.push(s)}else{for(let t=0;t<u;t++)c.push(l[i+t]);if(n>1)for(const _ of m){const w=_*u;if(l[w+L]<=r)continue;l[w+L]=r;for(let t=0;t<u;t++)c.push(l[w+t])}}}return c}_getOriginId(t){return t-this.points.length>>5}_getOriginZoom(t){return(t-this.points.length)%32}_map(t,e,o){if(t[e+k]>1){const i=this.clusterProps[t[e+h]];return o?Object.assign({},i):i}const s=this.points[t[e+M]].properties;const n=this.options.map(s);return o&&n===s?Object.assign({},n):n}}function m(t,e,o){return{type:"Feature",id:t[e+M],properties:x(t,e,o),geometry:{type:"Point",coordinates:[s(t[e]),i(t[e+1])]}}}function x(t,e,o){const s=t[e+k];const n=s>=1e4?`${Math.round(s/1e3)}k`:s>=1e3?`${Math.round(s/100)/10}k`:s;const i=t[e+h];const r=i===-1?{}:Object.assign({},o[i]);return Object.assign(r,{cluster:true,cluster_id:t[e+M],point_count:s,point_count_abbreviated:n})}function V(t){return t/360+.5}function v(t){const e=Math.sin(t*Math.PI/180);const o=.5-.25*Math.log((1+e)/(1-e))/Math.PI;return o<0?0:o>1?1:o}function s(t){return(t-.5)*360}function i(t){const e=(180-t*360)*Math.PI/180;return 360*Math.atan(Math.exp(e))/Math.PI-90}return t}()})(t={exports:{}});var e=t.exports,t=(Voxel.Maps.Clusterer.prototype.init=function({map:t}){this.map=t,this.markers=[],this.clusters={},this.cluster=new e({radius:60,maxZoom:30}),this.map.addListener("zoom_changed",()=>this.render())},Voxel.Maps.Clusterer.prototype._getGeoJSON=function(){return this.markers.map(function(t,e){return{type:"Feature",geometry:{type:"Point",coordinates:[t.getPosition().getLongitude(),t.getPosition().getLatitude()]},properties:{sID:e+1,scID:0,marker:t}}})},Voxel.Maps.Clusterer.prototype.getSourceObject=function(){return this.cluster},Voxel.Maps.Clusterer.prototype.clearMarkers=function(){this.markers.map(t=>t.remove()),this.markers=[]},Voxel.Maps.Clusterer.prototype.addMarkers=function(t){this.markers.push(...t)},Voxel.Maps.Clusterer.prototype.render=function(){var t=this._getGeoJSON();t.length?(this.cluster.load(t),this.markers.map(t=>t.remove()),t=this.cluster.getClusters([-180,-90,180,90],Math.floor(this.map.getSourceObject().getZoom())),this._removeFeatures(),this._displayFeatures(t)):this._removeFeatures()},Voxel.Maps.Clusterer.prototype._displayFeatures=function(t){t.forEach(o=>{if(o.properties.cluster){var t=`<div class="ts-marker-cluster">${o.properties.point_count_abbreviated}</div>`;let e=new Voxel.Maps.LatLng(o.geometry.coordinates[1],o.geometry.coordinates[0]);t=new Voxel.Maps.Marker({map:this.map,position:e,template:t,onClick:()=>{var t;this.map.getZoom()>=this.map.getMaxZoom()?(t=this.cluster.getLeaves(o.properties.cluster_id,-1).map(t=>t.properties.marker),"function"==typeof this._onNonExpandableClusterClick&&this._onNonExpandableClusterClick(t)):((t=this.map.getSourceObject()).panTo(e.getSourceObject()),t.setZoom(this.cluster.getClusterExpansionZoom(o.properties.cluster_id)),"function"==typeof this._onClusterClick&&this._onClusterClick())}});this.clusters[o.properties.cluster_id]=t.getSourceObject()}else o.properties.marker.setMap(this.map)})},Voxel.Maps.Clusterer.prototype._removeFeatures=function(){Object.values(this.clusters).map(t=>t.setMap(null))},Voxel.Maps.Clusterer.prototype.onClusterClick=function(t){this._onClusterClick=t},Voxel.Maps.Clusterer.prototype.onNonExpandableClusterClick=function(t){this._onNonExpandableClusterClick=t},document.getElementById("google-maps-js"));t&&(t.src=t.dataset.src),Voxel.Maps.GoogleMaps=function(){Voxel.Maps.SetupMarkerOverlay(),Voxel.Maps.SetupCircleOverlay(),Voxel.Maps.Loaded=!0,document.dispatchEvent(new Event("maps:loaded")),jQuery(document).on("voxel:markup-update",()=>{requestAnimationFrame(()=>jQuery(document).trigger("maps:loaded"))})},jQuery(document).on("maps:loaded",()=>{jQuery(".ts-map.ts-map-autoload").each((t,o)=>{if(!o.__map_loaded__){o.__map_loaded__=!0;var s=jQuery(o).data("config"),o={el:o,zoom:3};s&&(s.zoom&&(o.zoom=s.zoom),s.minZoom&&(o.minZoom=s.minZoom),s.maxZoom&&(o.maxZoom=s.maxZoom),s.center)&&(o.center=new Voxel.Maps.LatLng(s.center.lat,s.center.lng));let e=new Voxel.Maps.Map(o);s.markers&&s.markers.forEach(t=>{new Voxel.Maps.Marker({map:e,position:new Voxel.Maps.LatLng(t.lat,t.lng),template:t.uriencoded?decodeURIComponent(t.template):t.template})})}})})});
